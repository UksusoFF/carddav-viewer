{% extends 'layout.twig' %}

{% block styles %}
    <style>
        #cards_wrapper .row:not(.dt-table) {
            display: none;
        }

        #cards_wrapper .ui.grid {
            margin-top: 1rem;
            margin-bottom: 1rem;
        }

        table.dataTable > tbody > tr.child ul.dtr-details > li {
            border-bottom: 0;
        }

        table.dataTable a[href^="tel:"] {
            display: block;
            padding: 10px 0;
        }

        .viber-wrap {
            position: relative;
            display: block;
        }

        .viber-wrap img.avatar {
            display: none;
        }

        .viber-wrap:hover img.avatar{
            display: block;
            position: absolute;
            top: 0;
            right: 0;
            max-width: 100px;
            max-height: 100px;
        }
    </style>
{% endblock %}

{% block scripts %}
    <script>
        function naturalSort(a, b) {
            var re = /(^-?[0-9]+(\.?[0-9]*)[df]?e?[0-9]?%?$|^0x[0-9a-f]+$|[0-9]+)/gi,
                sre = /(^[ ]*|[ ]*$)/g,
                dre = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
                hre = /^0x[0-9a-f]+$/i,
                ore = /^0/,
                htmre = /(<([^>]+)>)/ig,
                // convert all to strings and trim()
                x = a.toString().replace(sre, '') || '',
                y = b.toString().replace(sre, '') || '';

            // remove html from strings if desired
            x = x.replace(htmre, '');
            y = y.replace(htmre, '');

            // chunk/tokenize
            var xN = x.replace(re, '\0$1\0').replace(/\0$/, '').replace(/^\0/, '').split('\0'),
                yN = y.replace(re, '\0$1\0').replace(/\0$/, '').replace(/^\0/, '').split('\0'),
                // numeric, hex or date detection
                xD = parseInt(x.match(hre), 10) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),
                yD = parseInt(y.match(hre), 10) || xD && y.match(dre) && Date.parse(y) || null;

            // first try and sort Hex codes or Dates
            if (yD) {
                if (xD < yD) {
                    return -1;
                } else if (xD > yD) {
                    return 1;
                }
            }

            // natural sorting through split numeric strings and default strings
            for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {
                // find floats not starting with '0', string or 0 if not defined (Clint Priest)
                var oFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc], 10) || xN[cLoc] || 0;
                var oFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc], 10) || yN[cLoc] || 0;
                // handle numeric vs string comparison - number < string - (Kyle Adams)
                if (isNaN(oFxNcL) !== isNaN(oFyNcL)) {
                    return (isNaN(oFxNcL)) ? 1 : -1;
                }
                // rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'
                else if (typeof oFxNcL !== typeof oFyNcL) {
                    oFxNcL += '';
                    oFyNcL += '';
                }
                if (oFxNcL < oFyNcL) {
                    return -1;
                }
                if (oFxNcL > oFyNcL) {
                    return 1;
                }
            }
            return 0;
        }

        $.fn.dataTableExt.oSort['natural-asc'] = function(a, b) {
            return naturalSort(a, b);
        };

        $.fn.dataTableExt.oSort['natural-desc'] = function(a, b) {
            return naturalSort(a, b) * -1;
        };

        $(document).ready(function() {
            $('#cards').DataTable({
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Russian.json"
                },
                "paginate": false,
                "lengthChange": false,
                "filter": true,
                "info": false,
                "autoWidth": false,
                "aoColumns": [{"sType": "natural"}, {"sType": "natural"}, null, null, null],
            });

            var delay;

            $('input#search').on('keyup change', function() {
                clearTimeout(delay);
                var search = this.value

                delay = setTimeout(function() {
                    $('#cards').DataTable().search(search).draw();
                }, 2000);
            });
        });
    </script>
{% endblock %}

{% block content %}
    <div class="ui fluid big icon input">
        <input id="search" type="text" placeholder="Поиск">
        <i class="search icon"></i>
    </div>

    <table id="cards" class="ui celled table responsive nowrap unstackable" style="width:100%">
        <thead>
        <tr>
            <th>ФИО</th>
            <th>Подъезд Квартира</th>
            <th>Метки</th>
            <th>Телефон</th>
            <th>Примечания</th>
        </tr>
        </thead>
        <tbody>
        {% for card in cards %}
            <tr>
                <td>{{ card.firstname }}</td>
                <td>{{ card.lastname }}</td>
                <td>
                    {% for category in card.categories %}
                        <div>{{ category }}</div>
                    {% endfor %}
                </td>
                <td>
                    {% for phone in card.phones %}
                        <a href="tel:{{ phone.number }}">{{ phone.number }}</a>
                    {% endfor %}
                </td>
                <td>
                    {% for phone in card.phones %}
                        {% if phone.viber.chat != null %}
                            <a href="viber://chat?number={{ phone.viber.chat.phone }}"
                               style="color: #665CAC;"
                               class="viber-wrap">
                                <i class="fa fa-whatsapp"></i>
                                {{ phone.viber.chat.nick }}
                                {% if phone.viber.chat.avatar != null %}
                                    <img class="avatar" src="viber/{{ phone.viber.chat.avatar }}.jpg">
                                {% else %}
                                    <img class="avatar" src="viber-default.png">
                                {% endif %}
                            </a>
                        {% elseif phone.viber.contacts != null %}
                            <a href="viber://chat?number={{ phone.viber.contacts.phone }}"
                               style="color: lightgrey;"
                               class="viber-wrap">
                                <i class="fa fa-whatsapp"></i>
                                {{ phone.viber.contacts.nick }}
                                {% if phone.viber.contacts.avatar != null %}
                                    <img class="avatar" src="viber/{{ phone.viber.contacts.avatar }}.jpg">
                                {% else %}
                                    <img class="avatar" src="viber-default.png">
                                {% endif %}
                            </a>
                        {% endif %}
                    {% endfor %}
                    <div>{{ card.note|nl2br|replace({'\\': ''})|raw }}</div>
                    {% for email in card.email %}
                        {% for val in email %}
                            <a href="mailto:{{ val }}">{{ val }}</a>
                        {% endfor %}
                    {% endfor %}
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
{% endblock %}